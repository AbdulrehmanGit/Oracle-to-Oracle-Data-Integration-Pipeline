#!/usr/bin/env python3
"""
One-time CDC prep for SOURCE schema.
Adds CDC columns (CREATED_AT, UPDATED_AT, IS_DELETED) to all base tables
in the SOURCE schema if they are missing. Safe to re-run.
"""
import sys
import logging
from config.settings import db_config, cdc_config
from utils.database import get_connection, list_tables, column_exists

# Set up logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[logging.StreamHandler(sys.stdout)]
)
logger = logging.getLogger(__name__)

def add_missing_cdc_columns(conn, table: str):
    """Add missing CDC columns to a table."""
    fq_table = f'"{db_config.source_user.upper()}"."{table.upper()}"'
    missing_columns = []
    
    for col, dtype, extra in cdc_config.cdc_columns:
        if not column_exists(conn, db_config.source_user, table, col):
            missing_columns.append((col, dtype, extra))
    
    if not missing_columns:
        logger.info(f"{table}: CDC columns already present")
        return
    
    with conn.cursor() as c:
        for col, dtype, extra in missing_columns:
            ddl = f"ALTER TABLE {fq_table} ADD ({col} {dtype} {extra})"
            c.execute(ddl)
            logger.info(f"{table}: Added {col} {dtype} {extra}")
    conn.commit()

def main():
    """Main function to prepare CDC columns."""
    try:
        with get_connection(db_config.source_user, db_config.source_password) as conn:
            tables = list_tables(conn, db_config.source_user)
            logger.info(f"Found {len(tables)} tables in {db_config.source_user}: {tables}")
            
            for table in tables:
                add_missing_cdc_columns(conn, table)
                
        logger.info("CDC prep complete.")
    except Exception as e:
        logger.error(f"Fatal error: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
